from fastapi import Query, Body, APIRouter
from pydantic import BaseModel
from typing import List, Dict

router = APIRouter(prefix="/hotels", tags=["Отели"])

hotels = [
    {"id": 1, "title": "Sochi", "name": "sochi"},
    {"id": 2, "title": "Дубай", "name": "dubai"},
    {"id": 3, "title": "Мальдивы", "name": "maldivi"},
    {"id": 4, "title": "Геленджик", "name": "gelendzhik"},
    {"id": 5, "title": "Москва", "name": "moscow"},
    {"id": 6, "title": "Казань", "name": "kazan"},
    {"id": 7, "title": "Санкт-Петербург", "name": "spb"},
]


@router.get("")
def get_hotels(
        id: int | None = Query(None, description="Айдишник"),
        title: str | None = Query(None, description="Название отеля"),
        page: int = Query(1, description="Номер страницы", ge=1),
        per_page: int = Query(3, description="Количество элементов на странице", ge=1),
) -> List[Dict]:
    # Фильтрация отелей по id и title
    filtered_hotels = []
    for hotel in hotels:
        if id and hotel["id"] != id:
            continue
        if title and hotel["title"] != title:
            continue
        filtered_hotels.append(hotel)

    # Пагинация
    start = (page - 1) * per_page
    end = start + per_page
    paginated_hotels = filtered_hotels[start:end]

    return {
        "data": paginated_hotels,
        "meta": {
            "total": len(filtered_hotels),
            "page": page,
            "per_page": per_page,
            "total_pages": (len(filtered_hotels) + per_page - 1) // per_page,
        }
    }
